@page
@model ErrorModel
@{
    ViewData["Title"] = "Error";
}

<h1 class="text-danger">Error.</h1>
<h2 class="text-danger">An error occurred while processing your request.</h2>

@if (Model.ShowRequestId)
{
    <p>
        <strong>Request ID:</strong> <code>@Model.RequestId</code>
    </p>
}

<h3>Development Mode</h3>
<p>
    Swapping to the <strong>Development</strong> environment displays detailed information about the error that occurred.
</p>
<p>
    <strong>The Development environment shouldn't be enabled for deployed applications.</strong>
    It can result in displaying sensitive information from exceptions to end users.
    For local debugging, enable the <strong>Development</strong> environment by setting the <strong>ASPNETCORE_ENVIRONMENT</strong> environment variable to <strong>Development</strong>
    and restarting the app.
</p>

<script>
    function changeColour(property, colour) {
        document.documentElement.style.setProperty(property, colour);
    }
    changeColour('--text', '@Model.p.Text');
    changeColour('--highColour', '@Model.p.Highlight');
    changeColour('--backColour', '@Model.p.Background');
    changeColour('--headColour', '@Model.p.Header');
    changeColour('--headText', '@Model.p.HeaderText');
    changeColour('--headTextAlt', '@Model.p.HeaderTextalt');
    changeColour('--footColour', '@Model.p.Footer');
    changeColour('--footText', '@Model.p.FooterText');
    changeColour('--footTextAlt', '@Model.p.FooterTextAlt');
    changeColour('--linkColour', '@Model.p.Link');
    changeColour('--textSize', '@(Model.p.TextSize)px');
</script>